# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
################################################################################################
##########                        HAUSMAN TEST                                    ##############
################################################################################################
poolability_test <- phtest(fixed_model)
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
# poolability test
pFtest(fixed_model)  #  ---> Individual Effect
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
phtest(fixed_model, Random_Model)
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i
+csh_x
,data = Data, model = "random",
index=c("country","year"))
phtest(fixed_model, Random_Model)
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
# rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(fixed_model)
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "random",
index=c("country","year"))
# Removed
# irr, delta, cda, ck, pl_da, cor_exp, statcap, csh_g, csh_m, csh_r, pl_c, pl_i, pl_m
summary(Random_Model)
phtest(fixed_model, Random_Model)
# Testing for serial correlation
pbgtest(fixed_model)
bptest(fixed_model, studentize = TRUE)
bptest(fixed_model, studentize = TRUE)
# Robust Standard Error Model
Robust_std_err_model=coeftest(fixed_model, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
Robust_std_err_model
linearHypothesis(fixed_model, c("hc=0", "labsh=0"))
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
setwd("C:\\Users\\asus\\Desktop\\Data Science\\Advanced Econometrics\\Project")
Data=read_excel("pwt100.xlsx", sheet = "Data")
View(Data)
colnames(Data)
# Fitting Gineral Model
fixed_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
library(pglm)
library(stargazer)
library(readxl)
library(plm)
library(car)
library(dplyr)
library(lmtest)
Data=read_excel("pwt100.xlsx", sheet = "Data")
# Fitting Gineral Model
fixed_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "random",
index=c("country","year"))
phtest(fixed_model, Random_Model)
fixef(fixed_model)
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
# Testing for serial correlation
pbgtest(fixed_model)
# Breusch-Pagan test for heteroskedasticity
bptest(ols, studentize=T)
bptest(fixed_model, studentize = TRUE)
# Robust Standard Error Model
Robust_std_err_model=coeftest(fixed_model, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
Robust_std_err_model
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"))
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"),vcov.=vcovHC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
# Fitting Gineral Model
fixed_general_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
ols=lm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data)
ols=lm(rgdpo~pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data)
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "random",
index=c("country","year"))
phtest(fixed_model, Random_Model)
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
# Testing for serial correlation
pbgtest(fixed_model)
# Breusch-Pagan test for heteroskedasticity
bptest(ols, studentize=T)
# Robust Standard Error Model
Robust_std_err_model=coeftest(fixed_model, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
bptest(fixed_model, studentize = TRUE)
# Robust Standard Error Model
Robust_std_err_model=coeftest(fixed_model, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
Robust_std_err_model
summary(fixed_model)
Robust_std_err_model
linearHypothesis(fixed_model, c("hc=0", "labsh=0"))
linearHypothesis(Robust_std_err_model, c("hc=0", "labsh=0"),vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"),vcov.=vcovHC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(fixed_general_model,Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(fixed_general_model,Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(fixed_general_model,Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
# Compute the log-likelihood (using RSS as an approximation)
logLik_Random <- -nobs(Random_Model)/2 * (log(2 * pi) + log(sum(residuals(Random_Model)^2) / nobs(Random_Model)) + 1)
logLik_Fixed <- -nobs(fixed_model)/2 * (log(2 * pi) + log(sum(residuals(fixed_model)^2) / nobs(fixed_model)) + 1)
logLik_FINAL_FIXED <- -nobs(FINAL_FIXED)/2 * (log(2 * pi) + log(sum(residuals(FINAL_FIXED)^2) / nobs(FINAL_FIXED)) + 1)
# Count the number of parameters
k_Final <- length(coef(FINAL_FIXED))
k_Random <- length(coef(Random_Model))
k_Fixed <- length(coef(fixed_model))
# Compute AIC
AIC_Random <- -2 * logLik_Random + 2 * k_Random
AIC_Fixed <- -2 * logLik_Fixed + 2 * k_Fixed
AIC_Final <- -2 * logLik_FINAL_FIXED + 2 * k_Final
AIC_Robust <- -2 * logLik_FINAL_FIXED + 2 * k_Robust
k_Robust <- length(coef(FINAL_ROBUST_STD.ERR_MODEL))
# Compute AIC
AIC_Random <- -2 * logLik_Random + 2 * k_Random
AIC_Fixed <- -2 * logLik_Fixed + 2 * k_Fixed
AIC_Final <- -2 * logLik_FINAL_FIXED + 2 * k_Final
AIC_Robust <- -2 * logLik_FINAL_FIXED + 2 * k_Robust
# Print AIC values
# Print AIC values
print(AIC_Random)
print(AIC_Fixed)
print(AIC_Final)
print(AIC_Robust)
FINAL_ROBUST_STD.ERR_MODEL
setwd("C:\\Users\\asus\\Desktop\\Data Science\\Advanced Econometrics\\Project")
Data=read_excel("pwt100.xlsx", sheet = "Data")
View(Data)
# Fitting Gineral Model
fixed_general_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
library(pglm)
library(stargazer)
library(readxl)
library(plm)
library(car)
library(dplyr)
library(lmtest)
# Fitting Gineral Model
fixed_general_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "random",
index=c("country","year"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
library(sandwich)
library(lmtest)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
library(plm)
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"),vcov.=vcovHC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
library(pglm)
library(stargazer)
library(readxl)
library(plm)
library(car)
library(dplyr)
library(lmtest)
setwd("C:\\Users\\asus\\Desktop\\Data Science\\Advanced Econometrics\\Project")
Data=read_excel("pwt100.xlsx", sheet = "Data")
View(Data)
# Fitting Gineral Model
fixed_general_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
# Fitting Gineral Model
fixed_general_model <- plm(rgdpo ~ pop+avh+emp+hc+ccon+cda+cn+ck+ctfp+cwtfp+rconna+rdana+rnna+rkna
+rtfpna+labsh+irr+delta+xr+csh_c+csh_i+csh_g+csh_x+csh_m+csh_r
,data = Data, model = "within",
index=c("country","year"))
# Spearman's rank correlation test between variable1 and variable2
cor_test_result <- cor.test(numeric_data$cgdpe, numeric_data$rgdpna, method = "spearman")
cor_test_result
# Collinearity Problems
# cn and ck
cor.test(numeric_data$cn, numeric_data$ck, method = "spearman")
# Collinearity Problems
# ctfp and cwtfp (preferable) -->Welfare-relevant TFP levels at current PPPs
cor.test(numeric_data$ctfp, numeric_data$cwtfp, method = "spearman")
# Collinearity Problems
# ccon and rconna ,,---> ccon better to compare across countries
cor.test(numeric_data$ccon, numeric_data$rconna, method = "spearman")
#  Collinearity Problems
# ctfp and rtfpna,  --> ctfp better to compare across countries
cor.test(numeric_data$ctfp, numeric_data$rtfpna, method = "spearman")
# ctfp and cwtfp,,, --> ctfp is better
cor.test(numeric_data$ctfp, numeric_data$cwtfp, method = "spearman")
#  Collinearity Problems
# ctfp and rtfpna,  --> ctfp better to compare across countries
cor.test(numeric_data$pl_con, numeric_data$pl_da, method = "spearman")
#  Collinearity Problems
# pl_con, pl_da and pl_gdpo,  --> pl_gdpo better to compare across countries
cor.test(numeric_data$pl_gdpo, numeric_data$pl_con, method = "spearman")
#  Collinearity Problems
# pl_con, pl_da and pl_gdpo,  --> pl_gdpo better to compare across countries
cor.test(numeric_data$csh_r, numeric_data$csh_m, method = "spearman")
#  Collinearity Problems
# pl_con, pl_da and pl_gdpo,  --> pl_gdpo better to compare across countries
cor.test(numeric_data$pl_c, numeric_data$pl_g, method = "spearman")
##  Collinearity Problems
# pop, emp and pl_gdpo,  --> pl_gdpo better to compare across countries
cor.test(numeric_data$cda, numeric_data$emp, method = "spearman")
cor_matrix <- cor(Data[, c("pop", "avh","hc",'ck',"ccon","ctfp","rtfpna",
"labsh","irr","delta","xr","pl_gdpo","csh_c","csh_i","csh_g",
"csh_x","csh_r")], use = "pairwise.complete.obs")
cor_matrix
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(fixed_model)
summary(fixed_model)
fixed_model <- plm(rgdpo~pop+emp+avh+hc+xr+ccon+ctfp+rtfpna+labsh+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(fixed_model)
ols=lm(rgdpo~pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data)
summary(ols)
Random_Model<-plm(rgdpo ~ pop+emp+avh+hc+ccon+ctfp+rtfpna+labsh+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "random",
index=c("country","year"))
summary(Random_Model)
phtest(fixed_model, Random_Model)
fixef(fixed_model)
# poolability test
pFtest(fixed_model,ols)  #  ---> Individual Effect
# Testing for serial correlation
pbgtest(fixed_model)
# Breusch-Pagan test for heteroskedasticity
bptest(ols, studentize=T)
bptest(fixed_model, studentize = TRUE)
phtest(fixed_model, Random_Model)
pFtest(fixed_model,ols)  #  ---> Individual Effect
pFtest(fixed_model,ols)  #  ---> Individual Effect
pbgtest(fixed_model)
# Breusch-Pagan test for heteroskedasticity
bptest(ols, studentize=T)
bptest(fixed_model, studentize = TRUE)
Robust_std_err_model=coeftest(fixed_model, vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
Robust_std_err_model
# Assuming fixed_model is already fitted using plm::plm or similar
Robust_std_err_model 2= coeftest(fixed_model, vcov.=vcovHC(fixed_model, type="HC0", cluster="group"))
# Assuming fixed_model is already fitted using plm::plm or similar
Robust_std_err_model_2= coeftest(fixed_model, vcov.=vcovHC(fixed_model, type="HC0", cluster="group"))
Robust_std_err_model_2
Robust_std_err_model
Robust_std_err_model_2
summary(fixed_model)
summary(Random_Model)
Robust_std_err_model
linearHypothesis(Robust_std_err_model, c("hc=0", "labsh=0"))
linearHypothesis(fixed_model, c("hc=0", "labsh=0"))
linearHypothesis(Robust_std_err_model, c("hc=0", "labsh=0"),vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
linearHypothesis(Robust_std_err_model, c("hc=0", "labsh=0"),vcov.=vcovHC(fixed_model, method="white1", type="HC0", cluster="group"))
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
library(dplyr)
library(lmtest)
library(sandwich)
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"),vcov.=vcovHC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
AIC(fixed_model)
####################################################################################
#############################    COMPARING MODELS      #############################
####################################################################################
# aic_Random_Model <- AIC(Random_Model)
# aic_fixed_model <- AIC(fixed_model)
# aic_Robust_std_err_model <- AIC(Robust_std_err_model)
# aic_FINAL_ROBUST_STD.ERR_MODEL <- AIC(FINAL_ROBUST_STD.ERR_MODEL)
stargazer(Random_Model,fixed_model, Robust_std_err_model, FINAL_ROBUST_STD.ERR_MODEL,
type = "text",
title = "Comparison of Different Models",
dep.var.labels = "Dependent Variable: GDP",
out = "models_comparison.txt")
# Compute the log-likelihood (using RSS as an approximation)
logLik_Random <- -nobs(Random_Model)/2 * (log(2 * pi) + log(sum(residuals(Random_Model)^2) / nobs(Random_Model)) + 1)
logLik_Fixed <- -nobs(fixed_model)/2 * (log(2 * pi) + log(sum(residuals(fixed_model)^2) / nobs(fixed_model)) + 1)
logLik_FINAL_FIXED <- -nobs(FINAL_FIXED)/2 * (log(2 * pi) + log(sum(residuals(FINAL_FIXED)^2) / nobs(FINAL_FIXED)) + 1)
# Count the number of parameters
k_Final <- length(coef(FINAL_FIXED))
k_Random <- length(coef(Random_Model))
k_Fixed <- length(coef(fixed_model))
k_Robust <- length(coef(FINAL_ROBUST_STD.ERR_MODEL))
# Compute AIC
AIC_Random <- -2 * logLik_Random + 2 * k_Random
AIC_Fixed <- -2 * logLik_Fixed + 2 * k_Fixed
AIC_Final <- -2 * logLik_FINAL_FIXED + 2 * k_Final
AIC_Robust <- -2 * logLik_FINAL_FIXED + 2 * k_Robust
# Print AIC values
print(AIC_Random)
print(AIC_Fixed)
print(AIC_Final)
print(AIC_Robust)
FINAL_ROBUST_STD.ERR_MODEL
Robust_std_err_model
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(library(sandwich)
library(lmtest)
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
summary(FINAL_FIXED)
Robust_std_err_model
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
summary(FINAL_FIXED)
FINAL_ROBUST_STD_ERR_MODEL = coeftest(FINAL_FIXED, vcov.=vcovHC(FINAL_FIXED, type="HC0", cluster="group"))
# Print the results
print(FINAL_ROBUST_STD_ERR_MODEL)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD_ERR_MODEL = coeftest(FINAL_FIXED, vcov.=vcovHC(FINAL_FIXED, type="HC0", cluster="group"))
# Print the results
print(FINAL_ROBUST_STD_ERR_MODEL)
Fixed_model <- plm(rgdpo~pop+emp+avh+xr+ccon+ctfp+rtfpna+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(Fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
FINAL_ROBUST_STD.ERR_MODEL
linearHypothesis(FINAL_ROBUST_STD.ERR_MODEL, c("emp=0"),vcov.=vcovHC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
AIC(fixed_model)
summary(fixed_model)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(fixed_model, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(FINAL_FIXED, vcov.=vcovHAC(FINAL_FIXED, method="white1", type="HC0", cluster="group"))
summary(FINAL_FIXED)
# Robust Standard Error Model
FINAL_ROBUST_STD.ERR_MODEL=coeftest(fixed_model, vcov.=vcovHAC(fixed_model, method="white1", type="HC0", cluster="group"))
aa = coeftest(FINAL_FIXED, vcov = vcovSCC(FINAL_FIXED, type = "HC0", maxlag = 1))
print(aa)
FINAL_ROBUST_STD.ERR_MODEL = coeftest(FINAL_FIXED, vcov = vcovSCC(FINAL_FIXED, type = "HC0", maxlag = 1))
## FINAL MODEL
FINAL_FIXED  <- plm(rgdpo~pop+emp+avh+ccon+ctfp+rtfpna+xr+pl_con+pl_gdpo+csh_c+csh_i+csh_x
,data = Data, model = "within",index=c("country","year"))
summary(FINAL_FIXED)
FINAL_ROBUST_STD.ERR_MODEL = coeftest(FINAL_FIXED, vcov = vcovSCC(FINAL_FIXED, type = "HC0", maxlag = 1))
print(FINAL_ROBUST_STD.ERR_MODEL)
AIC(fixed_model)
# Compute the log-likelihood (using RSS as an approximation)
logLik_Random <- -nobs(Random_Model)/2 * (log(2 * pi) + log(sum(residuals(Random_Model)^2) / nobs(Random_Model)) + 1)
logLik_Fixed <- -nobs(fixed_model)/2 * (log(2 * pi) + log(sum(residuals(fixed_model)^2) / nobs(fixed_model)) + 1)
logLik_FINAL_FIXED <- -nobs(FINAL_FIXED)/2 * (log(2 * pi) + log(sum(residuals(FINAL_FIXED)^2) / nobs(FINAL_FIXED)) + 1)
# Count the number of parameters
k_Final <- length(coef(FINAL_FIXED))
k_Random <- length(coef(Random_Model))
k_Fixed <- length(coef(fixed_model))
k_Robust <- length(coef(FINAL_ROBUST_STD.ERR_MODEL))
# Compute AIC
AIC_Random <- -2 * logLik_Random + 2 * k_Random
AIC_Fixed <- -2 * logLik_Fixed + 2 * k_Fixed
AIC_Final <- -2 * logLik_FINAL_FIXED + 2 * k_Final
AIC_Robust <- -2 * logLik_FINAL_FIXED + 2 * k_Robust
# Print AIC values
print(AIC_Random)
print(AIC_Fixed)
print(AIC_Final)
print(AIC_Robust)
AIC(fixed_model)
